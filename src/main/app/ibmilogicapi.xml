<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:context="http://www.springframework.org/schema/context" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <http:listener-config name="httpListenerConfig" host="0.0.0.0" port="${http.port}" doc:name="HTTP Listener Configuration" />
    <apikit:config name="apiConfig" raml="api.raml" consoleEnabled="false" doc:name="Router" />
    <context:property-placeholder location="api.properties" />
    <db:generic-config name="Generic_Database_Configuration" url="jdbc:as400://${as400.endpoint};user=${as400.user};password=${as400.password};libraries=${as400.libraries};naming=*system" driverClassName="com.ibm.as400.access.AS400JDBCDriver" doc:name="Generic Database Configuration">
        <db:pooling-profile maxPoolSize="5" minPoolSize="3"/>
    </db:generic-config>
    <flow name="api-main">
        <http:listener config-ref="httpListenerConfig" path="/api/*" doc:name="HTTP" />
        <apikit:router config-ref="apiConfig" doc:name="APIkit Router" />
        <exception-strategy ref="apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy" />
    </flow>
    <flow name="api-console">
        <http:listener config-ref="httpListenerConfig" path="/console/*" doc:name="HTTP" />
        <apikit:console config-ref="apiConfig" doc:name="APIkit Console" />
    </flow>
    <flow name="get:/products:apiConfig">
        <set-payload value="{&#xA; &quot;productPrices&quot;: [{&#xA;     &quot;productName&quot;: &quot;TV&quot;,&#xA;     &quot;productID&quot;: 3,&#xA;     &quot;priceGroup&quot;: &quot;REGULAR&quot;,&#xA;      &quot;productPrice&quot;: 500&#xA;   }, {&#xA;      &quot;productName&quot;: &quot;TV&quot;,&#xA;      &quot;productID&quot;: 3,&#xA;      &quot;priceGroup&quot;: &quot;SALE&quot;,&#xA;      &quot;productPrice&quot;: 450&#xA;   }]&#xA; }" doc:name="Set Payload" />
    </flow>
    <flow name="get:/products/{productname}:apiConfig">
        <db:stored-procedure config-ref="Generic_Database_Configuration" doc:name="Call CRTTRN">
            <db:parameterized-query><![CDATA[CALL CRTTRN (:transType,:altTrnID,:reqData,:transID,:returnCd,:returnMsg)]]></db:parameterized-query>
            <db:in-param name="transType" type="CHAR" value="GETPRDPRC"/>
            <db:in-param name="altTrnID" type="CHAR" value="&quot; &quot;"/>
            <db:in-param name="reqData" type="CHAR" value="#[flowVars.productname]"/>
            <db:out-param name="transID" type="BIGINT"/>
            <db:out-param name="returnCd" type="NUMERIC"/>
            <db:out-param name="returnMsg" type="CHAR"/>
        </db:stored-procedure>
        <db:select config-ref="Generic_Database_Configuration" doc:name="Get response from staging">
            <db:parameterized-query><![CDATA[select * from WTGETPRCR where transid = #[payload.transID]]]></db:parameterized-query>
        </db:select>
        <dw:transform-message metadata:id="f8a1e39b-7e01-4153-b9bf-42f5904ee840" doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	productName: flowVars.productname,
	productID: payload.PRODUCTID[0] as :number,
	productPrices: payload map ((payload01 , indexOfPayload01) -> {
		priceGroup: payload01.PRICEGROUP,
		productPrice: payload01.PRODUCTPRICE as :number
	})
} when (sizeOf payload) > 0 and payload.ERRORYN[0] != 'Y'
otherwise
{
	productName: flowVars.productname,
	errors: payload map ((payload01, indexOfPayload01) -> {
		error: payload01.ERRORMSG
	})
} when (sizeOf payload) > 0
otherwise
{
	"productName": flowVars.productname,
	"error": "WebTF call failure"
}
]]></dw:set-payload>
        </dw:transform-message>
                <dw:transform-message doc:name="Transform Message">
            <dw:set-property propertyName="http.status"><![CDATA[%dw 1.0
%output application/java
---
"500" when payload.error == "WebTF call failure"
otherwise "404" when payload.errors != null
otherwise "200"]]></dw:set-property>
        </dw:transform-message>
        
    </flow>
    <apikit:mapping-exception-strategy name="apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
